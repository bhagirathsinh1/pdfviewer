{
    "sourceFile": "lib/dialogue/rename_dialouge.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1642076212258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1642077085721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,23 +74,22 @@\n \r\n   changeFileNameOnly(BuildContext context, String newFileName) async {\r\n     print(\"------------->arrived new name----$newFileName--------\");\r\n     var providerService = Provider.of<PdfFileService>(context, listen: false);\r\n+    var pdfServiceIndex = providerService.files[widget.index];\r\n+    var temp1 = pdfServiceIndex.referenceFile!.path;\r\n \r\n-    var temp1 = providerService.files[widget.index].referenceFile!.path;\r\n-\r\n     var lastSeparator = temp1.lastIndexOf(Platform.pathSeparator);\r\n     var newPath = temp1.substring(0, lastSeparator + 1) + newFileName + \".pdf\";\r\n \r\n-    var filename = await providerService.files[widget.index].referenceFile!\r\n-        .rename(newPath);\r\n+    var filename = await pdfServiceIndex.referenceFile!.rename(newPath);\r\n \r\n     print(\"-------------v.path data---------------- ${filename.path}\");\r\n \r\n-    providerService.files[widget.index].referenceFile = filename;\r\n-    providerService.files[widget.index].pdfpath = filename.path;\r\n+    pdfServiceIndex.referenceFile = filename;\r\n+    pdfServiceIndex.pdfpath = filename.path;\r\n \r\n-    providerService.files[widget.index].pdfname = filename.path.split('/').last;\r\n+    pdfServiceIndex.pdfname = filename.path.split('/').last;\r\n \r\n     providerService.getStorageFilleMethod();\r\n \r\n     Navigator.pop(context);\r\n"
                }
            ],
            "date": 1642076212258,
            "name": "Commit-0",
            "content": "import 'dart:io';\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:pdfviewer/service/pdf_file_service.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nclass RenameFileDialouge extends StatefulWidget {\r\n  final int index;\r\n  final String fileName;\r\n  RenameFileDialouge({Key? key, required this.index, required this.fileName})\r\n      : super(key: key);\r\n\r\n  @override\r\n  _RenameFileDialougeState createState() => _RenameFileDialougeState();\r\n}\r\n\r\nclass _RenameFileDialougeState extends State<RenameFileDialouge> {\r\n  final _formKeyRenameFile = GlobalKey<FormState>();\r\n  TextEditingController renameController = TextEditingController();\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    renameController.text = widget.fileName.split('/').last.split('.pdf').first;\r\n  }\r\n\r\n  // set up the AlertDialog\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return AlertDialog(\r\n      title: Text(\"Alert!\"),\r\n      content: Container(\r\n        height: 70,\r\n        child: Form(\r\n          key: _formKeyRenameFile,\r\n          child: Column(\r\n            mainAxisSize: MainAxisSize.min,\r\n            children: [\r\n              TextFormField(\r\n                controller: renameController,\r\n                validator: (value) {\r\n                  if (value != null && value != \"\") {\r\n                    return null;\r\n                  }\r\n                },\r\n                keyboardType: TextInputType.text,\r\n                // Only numbers can be entered\r\n                decoration: const InputDecoration(\r\n                    border: UnderlineInputBorder(),\r\n                    helperText: 'Enter new name here '),\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n      actions: [\r\n        TextButton(\r\n          child: Text(\"CANCEL\"),\r\n          onPressed: () {\r\n            Navigator.pop(context);\r\n          },\r\n        ),\r\n        TextButton(\r\n          child: Text(\"OK\"),\r\n          onPressed: () {\r\n            var newFileName = renameController.text;\r\n            print(newFileName.split('.'));\r\n            changeFileNameOnly(context, newFileName);\r\n            Navigator.pop(context);\r\n          },\r\n        )\r\n      ],\r\n    );\r\n  }\r\n\r\n  changeFileNameOnly(BuildContext context, String newFileName) async {\r\n    print(\"------------->arrived new name----$newFileName--------\");\r\n    var providerService = Provider.of<PdfFileService>(context, listen: false);\r\n\r\n    var temp1 = providerService.files[widget.index].referenceFile!.path;\r\n\r\n    var lastSeparator = temp1.lastIndexOf(Platform.pathSeparator);\r\n    var newPath = temp1.substring(0, lastSeparator + 1) + newFileName + \".pdf\";\r\n\r\n    var filename = await providerService.files[widget.index].referenceFile!\r\n        .rename(newPath);\r\n\r\n    print(\"-------------v.path data---------------- ${filename.path}\");\r\n\r\n    providerService.files[widget.index].referenceFile = filename;\r\n    providerService.files[widget.index].pdfpath = filename.path;\r\n\r\n    providerService.files[widget.index].pdfname = filename.path.split('/').last;\r\n\r\n    providerService.getStorageFilleMethod();\r\n\r\n    Navigator.pop(context);\r\n    ScaffoldMessenger.of(context).clearSnackBars();\r\n    ScaffoldMessenger.of(context).showSnackBar(\r\n      SnackBar(\r\n        content: Text(\"Renamed to  ${newFileName}\"),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}