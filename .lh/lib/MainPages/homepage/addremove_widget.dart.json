{
    "sourceFile": "lib/MainPages/homepage/addremove_widget.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1642076035908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1642578904138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:pdfviewer/SQLService/sqlService.dart';\r\n+import 'package:pdfviewer/model/pdf_list_model.dart';\r\n import 'package:pdfviewer/service/pdf_file_service.dart';\r\n import 'package:provider/provider.dart';\r\n \r\n class AddRemoveWidget extends StatefulWidget {\r\n@@ -12,10 +13,11 @@\n \r\n class _AddRemoveWidgetState extends State<AddRemoveWidget> {\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    var pdfService = Provider.of<PdfFileService>(context, listen: false);\r\n-    var isfav = pdfService.favoritePdfList\r\n+    PdfFileService pdfService =\r\n+        Provider.of<PdfFileService>(context, listen: false);\r\n+    Iterable<PdfListModel> isfav = pdfService.favoritePdfList\r\n         .where((element) => element.pdfpath == widget.paths);\r\n     return ListTile(\r\n       title: !isfav.isEmpty\r\n           ? Text(\r\n"
                }
            ],
            "date": 1642076035908,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:pdfviewer/SQLService/sqlService.dart';\r\nimport 'package:pdfviewer/service/pdf_file_service.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nclass AddRemoveWidget extends StatefulWidget {\r\n  AddRemoveWidget({Key? key, required this.paths}) : super(key: key);\r\n  final String paths;\r\n  @override\r\n  _AddRemoveWidgetState createState() => _AddRemoveWidgetState();\r\n}\r\n\r\nclass _AddRemoveWidgetState extends State<AddRemoveWidget> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    var pdfService = Provider.of<PdfFileService>(context, listen: false);\r\n    var isfav = pdfService.favoritePdfList\r\n        .where((element) => element.pdfpath == widget.paths);\r\n    return ListTile(\r\n      title: !isfav.isEmpty\r\n          ? Text(\r\n              \"Remove from favorite\",\r\n              style: TextStyle(\r\n                color: Colors.black.withOpacity(0.8),\r\n              ),\r\n            )\r\n          : Text(\r\n              \"Add to favorite\",\r\n              style: TextStyle(\r\n                color: Colors.black.withOpacity(0.8),\r\n              ),\r\n            ),\r\n      leading: !isfav.isEmpty\r\n          ? Icon(\r\n              Icons.star_border,\r\n              color: Colors.black.withOpacity(0.5),\r\n            )\r\n          : Icon(\r\n              Icons.star,\r\n              color: Colors.black.withOpacity(0.5),\r\n            ),\r\n      onTap: () async {\r\n        if (!isfav.isEmpty) {\r\n          pdfService\r\n              .removeFromFavoritePdfList(\r\n                  widget.paths.toString(), SqlModel.tableFavorite)\r\n              .whenComplete(() => Navigator.pop(context));\r\n        } else {\r\n          pdfService\r\n              .insertIntoFavoritePdfList(widget.paths, SqlModel.tableFavorite)\r\n              .whenComplete(() => Navigator.pop(context));\r\n        }\r\n      },\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}