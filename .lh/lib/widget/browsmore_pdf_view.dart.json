{
    "sourceFile": "lib/widget/browsmore_pdf_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1642570292017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1642570292017,
            "name": "Commit-0",
            "content": "// ignore_for_file: must_be_immutable\r\n\r\nimport 'dart:io';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter/services.dart';\r\nimport 'package:pdfviewer/service/pdf_file_service.dart';\r\nimport 'package:pdfviewer/widget/CommonWidget/title_of_bottomsheetpdf.dart';\r\nimport 'package:pdfviewer/widget/CommonWidget/viewpdf/continue_page.dart';\r\nimport 'package:pdfviewer/widget/CommonWidget/viewpdf/nightmode.dart';\r\nimport 'package:pdfviewer/widget/CommonWidget/viewpdf/page_by_page.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:syncfusion_flutter_pdfviewer/pdfviewer.dart';\r\n\r\nclass BrowsMoreView extends StatefulWidget {\r\n  String path;\r\n  BrowsMoreView({\r\n    required this.path,\r\n  });\r\n\r\n  @override\r\n  State<BrowsMoreView> createState() => _ViewPDFState();\r\n}\r\n\r\nclass _ViewPDFState extends State<BrowsMoreView> {\r\n  final GlobalKey<SfPdfViewerState> _pdfViewerKey = GlobalKey();\r\n  var _myFile;\r\n  late PdfViewerController _pdfViewerController;\r\n\r\n  TextEditingController textGotoValue = TextEditingController();\r\n  bool isLoading = false;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    loading();\r\n  }\r\n\r\n  @override\r\n  void dispose() {\r\n    _pdfViewerController.clearSelection();\r\n    super.dispose();\r\n  }\r\n\r\n  String seachValue = \"\";\r\n  changePage(int index) {\r\n    _pdfViewerController.jumpToPage(index);\r\n  }\r\n\r\n  loading() async {\r\n    setState(() {\r\n      isLoading = true;\r\n    });\r\n\r\n    Future.delayed(\r\n      const Duration(milliseconds: 300),\r\n      () async {\r\n        _pdfViewerController = PdfViewerController();\r\n        _myFile = File(widget.path.toString());\r\n        setState(() {\r\n          isLoading = false;\r\n        });\r\n      },\r\n    );\r\n  }\r\n\r\n  bool isContinuePage = false;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Consumer<PdfFileService>(builder: (context, pdfservice, child) {\r\n      return Stack(\r\n        children: [\r\n          Scaffold(\r\n            appBar: AppBar(\r\n              title: Text(\r\n                \"PDF Reader\",\r\n                style: TextStyle(color: Colors.black),\r\n              ),\r\n              backgroundColor: Colors.white,\r\n            ),\r\n            body: isLoading\r\n                ? Center(\r\n                    child: CircularProgressIndicator(),\r\n                  )\r\n                : Theme(\r\n                    data: ThemeData.light(),\r\n                    child: SfPdfViewer.file(\r\n                      _myFile,\r\n                      key: _pdfViewerKey,\r\n                      controller: _pdfViewerController,\r\n                      pageLayoutMode: isContinuePage\r\n                          ? PdfPageLayoutMode.single\r\n                          : PdfPageLayoutMode.continuous,\r\n                    ),\r\n                  ),\r\n          ),\r\n          Positioned(\r\n            bottom: 15,\r\n            right: 15,\r\n            child: FloatingActionButton(\r\n              // elevation: 0,\r\n              onPressed: () {},\r\n              child: IconButton(\r\n                onPressed: () {\r\n                  showModalBottomSheet<void>(\r\n                    context: context,\r\n                    builder: (BuildContext context) {\r\n                      return SingleChildScrollView(\r\n                        scrollDirection: Axis.vertical,\r\n                        child: Container(\r\n                          color: Colors.white,\r\n                          height: 320,\r\n                          child: Column(\r\n                            children: [\r\n                              TitleOfPdf(\r\n                                  titlePath:\r\n                                      widget.path.toString().split('/').last),\r\n                              ContinuePage(\r\n                                isContinuePage: isContinuePage,\r\n                                onValueChanged: (bool value) {\r\n                                  setState(() {\r\n                                    isContinuePage = value;\r\n                                  });\r\n                                },\r\n                              ),\r\n                              PageByPage(\r\n                                isContinuePage: isContinuePage,\r\n                                onValueChanged: (bool value) {\r\n                                  setState(() {\r\n                                    isContinuePage = value;\r\n                                  });\r\n                                },\r\n                              ),\r\n                              NightMode(),\r\n                              ListTile(\r\n                                title: Text(\r\n                                  \"Go to page\",\r\n                                  style: TextStyle(\r\n                                    color: Colors.black.withOpacity(0.8),\r\n                                  ),\r\n                                ),\r\n                                leading: Icon(\r\n                                  Icons.screen_search_desktop_rounded,\r\n                                  color: Colors.black.withOpacity(0.5),\r\n                                ),\r\n                                onTap: () {\r\n                                  showGotoAlert(context);\r\n                                },\r\n                              ),\r\n                            ],\r\n                          ),\r\n                        ),\r\n                      );\r\n                    },\r\n                  );\r\n                },\r\n                icon: Icon(Icons.settings),\r\n              ),\r\n            ),\r\n          ),\r\n        ],\r\n      );\r\n    });\r\n  }\r\n\r\n  final _formKey = GlobalKey<FormState>();\r\n\r\n  showGotoAlert(BuildContext context) {\r\n    // set up the buttons\r\n    Widget cancelButton = TextButton(\r\n      child: Text(\"CANCEL\"),\r\n      onPressed: () {\r\n        Navigator.pop(context);\r\n      },\r\n    );\r\n    Widget continueButton = TextButton(\r\n      child: Text(\"OK\"),\r\n      onPressed: () {\r\n        if (_formKey.currentState!.validate()) {\r\n          var temp = int.parse(textGotoValue.text);\r\n          changePage(temp);\r\n          Navigator.pop(context);\r\n          Navigator.pop(context);\r\n        }\r\n      },\r\n    );\r\n\r\n    // set up the AlertDialog\r\n    AlertDialog alert = AlertDialog(\r\n      title: Text(\"Go to Page\"),\r\n      content: Container(\r\n        height: 110,\r\n        child: Form(\r\n          key: _formKey,\r\n          child: Column(\r\n            mainAxisSize: MainAxisSize.min,\r\n            children: [\r\n              TextFormField(\r\n                controller: textGotoValue,\r\n                validator: (value) {\r\n                  if (value != null && value != \"\") {\r\n                    int temp = int.parse(value.toString());\r\n                    if (temp >= _pdfViewerController.pageNumber &&\r\n                        temp <= _pdfViewerController.pageCount) {\r\n                      return null;\r\n                    } else {\r\n                      return \"please enter page no between 1  - ${_pdfViewerController.pageCount}\";\r\n                    }\r\n                  }\r\n                },\r\n                keyboardType: TextInputType.number,\r\n                inputFormatters: <TextInputFormatter>[\r\n                  FilteringTextInputFormatter.digitsOnly\r\n                ], // Only numbers can be entered\r\n                decoration: const InputDecoration(\r\n                    border: UnderlineInputBorder(),\r\n                    labelText: 'Enter Page Number '),\r\n              ),\r\n              Align(\r\n                alignment: Alignment.topRight,\r\n                child: Text(\r\n                    '${_pdfViewerController.pageNumber} /  ${_pdfViewerController.pageCount}',\r\n                    style: TextStyle(\r\n                      color: Colors.grey,\r\n                    )),\r\n              )\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n      actions: [\r\n        cancelButton,\r\n        continueButton,\r\n      ],\r\n    );\r\n\r\n    // show the dialog\r\n    showDialog(\r\n      context: context,\r\n      builder: (BuildContext context) {\r\n        return alert;\r\n      },\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}